namespace infcomp.flatbuffers;

union MessageBody { TracesFromPriorRequest, ObservesInitRequest, ProposalRequest, TracesFromPriorReply, ObservesInitReply, ProposalReply }

table Message {
    body:MessageBody;
}

root_type Message;

union ProposalDistribution { UniformDiscreteProposal, NormalProposal }

table NDArray {
    data:[double];
    shape:[int];
}

table UniformDiscreteProposal {
    // extra params
    min:int;
    max:int;

    // proposal params
    probabilities:NDArray;
}

table NormalProposal {
    // proposal params
    mean:double;
    std:double;
}

table Sample {
    time:int;
    address:string;
    instance:int;
    proposal:ProposalDistribution;
    value:NDArray;
}

table Trace {
    observes:NDArray;
    samples:[Sample];
}

table TracesFromPriorRequest {
    num_traces:int;
}

table TracesFromPriorReply {
    traces:[Trace];
}

table ObservesInitRequest {
    observes:NDArray;
}

table ObservesInitReply {
    ok:bool;
}

table ProposalRequest {
    current_sample:Sample;
    previous_sample:Sample;
}

table ProposalReply {
    proposal:ProposalDistribution;
}
